/* CSS Variables to ensure consistent colors/styles throughout app*/

:root {
	--brandColor: hsl(209, 95%, 36%);
	--brandHue: 209;
	--brandSat: 95%;
	--brandLight: 36%;
	--accentHue: 29;
	--mainFont: 'Zen Kaku Gothic Antique', Arial, Helvetica, sans-serif;
	--titleFont: 'Gentium Book Basic', Garamond, serif;
	--footerFont: 'Vujahday Script', "Brush Script MT", cursive;
}

:root {
	--colorMain: hsl(var(--brandHue), 100%, 70%);
	--colorSecond: hsl(var(--brandHue), 60%, 80%);
	--colorTertiary: hsl(var(--brandHue), 20%, 70%);
	--colorDropShadow: hsl(var(--brandHue), 100%, 30%);
	--textMain: hsl(var(--brandHue), var(--brandSat), 5%);
	--textInvert: hsl(var(--brandHue), var(--brandSat), 90%);
	--borderColor: hsl(var(--accentHue), 87%, 46%);
	--bodyBackground: hsl(0, 0%, 95%);
	--colorBtnHover: hsl(var(--brandHue), 60%, 90%);
	--colorBtnActive: hsl(var(--brandHue), 80%, 90%);
	--linkColor: hsl(var(--brandHue), 100%, 20%);
	--expandBtnOpened: hsl(var(--accentHue), 90%, 50%);
	--expandBtnClosed: hsl(var(--accentHue), 87%, 46%);


}

[data-theme="dark"] {
	--colorMain: hsl(var(--brandHue), 100%, 30%);
	--colorSecond: hsl(var(--brandHue), 40%, 20%);
	--colorTertiary: hsl(var(--brandHue), 20%, 30%);
	--colorDropShadow: hsl(var(--brandHue), 100%, 10%);
	--textMain: hsl(var(--brandHue), var(--brandSat), 95%);
	--textInvert: hsl(var(--brandHue), var(--brandSat), 10%);
	--borderColor: hsl(var(--accentHue), 87%, 46%);
	--bodyBackground: hsl(0, 0%, 17%);
	--colorBtnHover: hsl(var(--brandHue), 40%, 15%);
	--colorBtnActive:hsl(var(--brandHue), 70%, 15%);
	--linkColor: hsl(var(--brandHue), 100%, 80%);
	--expandBtnOpened: hsl(var(--accentHue), 90%, 50%);
	--expandBtnClosed: hsl(var(--accentHue), 87%, 46%);
}

:root {
	--bodyWidth: min(100%, 1000px);
	--sectionWidth: max(100%, 1000px);
	--separatePadding: 20px;
	--pagePadding: min(2vw, 20px);
	--paddingOffset: calc(-1*(var(--pagePadding)));
	--font-size: clamp(1rem, 2.5vw, 1.75rem);
	--headerFooterOffset: calc(var(--font-size)*2.5);
	--border: 6px solid var(--borderColor);
	--border-radius: 5px;
	--boxShadow: 3px 5px 5px var(--colorDropShadow);
	--skew: 2deg;
	--antiSkew: calc(var(--skew)*-1);
	--breakerHeight: 6rem;


	--expandButtonHeight: 0px;
}

body {
	font-family: var(--mainFont);
	line-height: var(--lineHeight);
	color: var(--textMain);
	font-size: var(--font-size);
	overflow-y: var(--overY);
	overflow-x: var(--overX);
	padding-top: 0;
	padding-bottom: var(--headerFooterOffset);
	background-color: var(--bodyBackground);
	text-align: center;
}

h1, h2, h3, h4, h5, h6 {
	font-family: var(--titleFont);
	padding-top: 10px;
}

h1 {
	color: var(--textMain);
	font-size: clamp(1.85rem, 4vw, 2.7rem);
}

h2 {
	text-decoration: underline;
	transform: skew(calc(var(--skew)*-1), calc(var(--skew)*-1)) translateY(25px);
	font-size: 3rem;
	text-shadow: 0 0 10px var(--colorSecond);
}

h3 {
	font-size: clamp(1rem, 5vw, 3rem);
	margin-bottom: 20px;
}

h4 {
	margin-top: 30px;
}

p {
	padding: 10px 0;
	text-align: left;
}

.imageContainer {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: space-around;
	margin-bottom: 20px;
}

.displayImage {
	min-width: 40px;
	max-width: 33%;
	background-color: var(--colorTertiary);
	border-radius: var(--border-radius);
	box-shadow: var(--boxShadow);
	margin: 5px;
	border: 1px solid var(--borderColor);
}

.page {
	width: min(100%, 1000px);
	margin: 0 auto;
	padding-top: calc(var(--breakerHeight)*1.5);
	padding-bottom: 20px;
}

.note {
	display: block;
	text-align: center;
	font-size: 1rem;
	background-color: var(--colorTertiary);
	border-radius: var(--border-radius);
	margin: 10px 6px;
	box-shadow: var(--boxShadow);
	padding: 10px;
}

/* Page Size/Orientation specific variables */

/* Side Scroll Mode
 @media(max-height: 399px) and (orientation: landscape) {
	:root {
		--direction: row;
		--overX: scroll;
		--overX: hidden;
		--rotate: 0.25turn;
		--bodyMarginRight: 0;
		--font-size: clamp(1rem, 2.5vw, 1.75rem);
		--hide: none;
		--lineHeight: 2rem;
	}
}  */

/* Mobile Mode */
@media(max-width: 600px) {
	:root {
		--direction: column;
		--overX: hidden;
		--overY: scroll;
		--rotate: 0turn;
		--bodyMarginRight: 0;
		--font-size: clamp(0.5rem, 1rem, 1.5rem);
		--hide: none;
		--lineHeight: 2rem;
	}
}

/* Desktop Mode */
@media(min-width: 450px) {
	:root {
		--direction: column;
		--overX: hidden;
		--overY: scroll;
		--rotate: 0turn;
		--bodyMarginRight: calc(100vw - 100%);
		--font-size: clamp(1rem, 2.5vw, 1.75rem);
		--hide: inherit;
		--lineHeight: 2rem;
	}
}




article {
	background-color: var(--colorSecond);
	border-radius: var(--border-radius);
	/* padding-left: var(--paddingOffset); */
	padding: 10px 20px;
	margin: 10px;
	box-shadow: var(--boxShadow);
	transform: skew(0, var(--antiSkew));
	margin-bottom: 20px;
}

.background {
	background-color: var(--colorTertiary);
	/* width: var(--sectionWidth); */
	height: 100%;
	padding: var(--separatePadding) 0;
	transform: skew(0, var(--skew));
	border-radius: var(--border-radius);
	box-shadow: var(--boxShadow);
}

.anchor {
	display: block;
	position: relative;
	top: -9rem;
	visibility: hidden;
}

/* way off screen */
.scrollbar-measure {
	width: 100px;
	height: 100px;
	overflow: scroll;
	position: absolute;
	top: -9999px;
}



a {
	color: var(--linkColor);
	cursor: pointer;
}
/* 
:root {
	--transitionOut: max-height 1000ms cubic-bezier(.17,1.2,.63,1.0);
	--transitionIn: max-height 2000ms cubic-bezier(.17,1.2,.63,1.0);
	--expandHeightSmall: calc(var(--lineHeight)*4.4);
	--expandHeightBig: auto;
	--expandMaxHeight: 4000rem;
}

/* React Transitions */
/*
.my-node-appear {
	max-height: var(--expandHeightSmall);
	overflow: hidden;
}

.my-node-appear-active {
	max-height: var(--expandHeightSmall);
	overflow: hidden;
}

.my-node-appear-done {
	max-height: var(--expandHeightSmall);
	overflow: hidden;
}

.my-node-exit {
	max-height: var(--expandHeightSmall);
	overflow: hidden;
}

.my-node-exit-active {
	max-height: var(--expandMaxHeight);
	transition: var(--transitionIn);
	overflow: hidden;
}

.my-node-exit-done {
	max-height: var(--expandMaxHeight);
	overflow: hidden;
}

.my-node-enter {
	max-height: var(--expandMaxHeight);
	overflow: hidden;
}

.my-node-enter-active {
	max-height: var(--expandHeightSmall);
	transition: var(--transitionOut);
	overflow: hidden;
}

.my-node-enter-done {
	max-height: var(--expandHeightSmall);
	overflow: hidden;
} */